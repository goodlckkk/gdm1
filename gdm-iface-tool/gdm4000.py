
import gdm400
import struct

class GDM4000(gdm400.GDM400):
    labels = {
        0: (5, '  Info', None, '0'),
        1: (5, '  Data', None, '0'),
        2: (5, '   Stn', None, '0'),
        3: (1, '    Ih', None, 0.0),
        4: (5, ' Pcode', None, '0'),
        5: (5, '   Pno', None, '0'),
        6: (1, '    SH', None, 0.0),
        7: (1, '    HA', None, None),
        8: (1, '    VA', None, None),
        9: (1, '    SD', None, None),
        10: (1, '   DHT', None, 0.0),
        11: (1, '    HD', None, 0.0),
        12: (1, 'SqrAre', None, 0.0),
        13: (1, 'Volume', None, 0.0),
        14: (1, ' Grade', None, 0.0),
        15: (5, '  Area', None, '0'),
        16: (1, '    dH', None, 0.0),
        17: (1, '  HA  ', None, 0.0),
        18: (1, '  VA  ', None, 0.0),
        19: (1, '    dV', None, 0.0),
        20: (1, 'Offset', (-1.0, 1.0), 0.0),
        21: (1, 'HA ref', None, 0.0),
        22: (7, '  Comp', None, None),
        23: (4, ' Units', None, None),
        24: (1, '  HA I', None, 0.0),
        25: (1, '  VA I', None, 0.0),
        26: (1, '   SVA', None, 0.0),
        27: (1, '   SHA', None, 0.0),
        28: (1, '   SHD', None, 0.0),
        29: (1, '   SHT', None, 0.0),
        30: (1, '   PPM', (-60.0, 195), None),
        32: (6, '   F32', None, None),
        37: (1, '     N', None, 0.0),
        38: (1, '     E', None, 0.0),
        39: (1, '   ELE', None, 0.0),
        40: (1, '    dN', None, 0.0),
        41: (1, '    dE', None, 0.0),
        42: (1, '  dELE', None, 0.0),
        43: (1, 'Utm_Sc', None, 0.0),
        44: (1, ' Slope', None, 0.0),
        45: (1, '   dHA', None, 0.0),
        46: (1, ' S_dev', None, 0.0),
        47: (1, '    Nr', None, 0.0),
        48: (1, '    Er', None, 0.0),
        49: (1, '    VD', None, 0.0),
        50: (5, 'Job No', None, '0'),
        51: (5, '  Date', None, None),
        52: (5, '  Time', None, None),
        53: (5, 'Operat', None, '0'),
        54: (5, '  Proj', None, '0'),
        55: (2, 'Instno', None, None),
        56: (1, '  Temp', None, 0.0),
        57: (6, ' Blank', None, None),
        58: (1, 'Ea rad', None, 0.0),
        59: (1, 'Refrac', None, 0.0),
        60: (5, 'ShotID', None, '0'),
        61: (5, 'Active', None, '0'),
        62: (5, 'Refobj', None, '0'),
        63: (1, '  Diam', None, 0.0),
        64: (1, 'Radius', None, 0.0),
        65: (5, 'RelHum', None, '0'),
        66: (5, 'WetTmp', None, '0'),
        67: (1, '   SON', None, 0.0),
        68: (1, '   SOE', None, 0.0),
        69: (1, '   SHT', None, 0.0),
        72: (1, 'Radofs', None, 0.0),
        73: (1, 'RT.ofs', None, 0.0),
        74: (1, ' Press', None, 0.0),
        75: (1, '   dHT', None, 0.0),
        76: (1, '   dHD', None, 0.0),
        77: (1, '   dHA', None, 0.0),
        78: (5, '   COM', None, '1.8.0.9600'),
        79: (6, '   End', None, ord('>')),
        80: (1, ' Sect.', None, 0.0),
        81: (1, 'A-prm.', None, 0.0),
        82: (1, 'SecInc', None, 0.0),
        83: (1, 'CL.ofs', None, 0.0),
        84: (5, 'PCoeff', None, '0'),
        85: (5, '   PHt', None, '0'),
        86: (5, ' Layer', None, '0'),
        87: (5, 'LayerH', None, '0'),
        88: (5, 'Profil', None, '0'),
        89: (5, ' Dist.', None, '0'),
        90: (5, '  User', None, '0'),
        91: (5, '  User', None, '0'),
        92: (5, '  User', None, '0'),
        93: (5, '  User', None, '0'),
        94: (5, '  User', None, '0'),
        95: (5, '  User', None, '0'),
        96: (5, '  User', None, '0'),
        97: (5, '  User', None, '0'),
        98: (5, '  User', None, '0'),
        99: (5, '  User', None, '0'),
        100: (5, 'sw-build', None, None),
        101: (5, 'sw-ver', None, None),
        102: (1, '', None, 0.0),
        103: (1, 'ang1_add', None, 0.0),
        104: (1, 'comp1_gain', None, 0.0),
        105: (5, '', None, None),
        106: (1, 'comp2_gain', None, 0.0),
        107: (1, 'comp1_off', None, 0.0),
        108: (1, 'comp2_off', None, 0.0),
        109: (1, 'comp_cross', None, 0.0),
        110: (6, 'sensor_mode', None, 0),
        111: (4, 'sensor_xxx', None, None),
        112: (6, '', None, None),
        113: (6, 'ang0_sect', None, None),
        114: (6, 'ang1_sect', None, None),
        115: (4, 'ang0_val0', None, None),
        116: (4, 'ang0_val1', None, None),
        117: (4, 'ang1_val0', None, None),
        118: (4, 'ang1_val1', None, None),
        119: (4, 'angl_ref', None, None),
        120: (4, 'comp_ref', None, None),
        121: (1, '', None, 0.0),
        122: (4, 'comp_val1', None, None),
        123: (4, 'comp_val2', None, None),
        124: (6, '', None, None),
        125: (4, '', None, None),
        126: (4, '', None, None),
        127: (4, '', None, None),
        128: (4, '', None, None),
        129: (4, '', None, None),
        130: (2, '', None, None),
        131: (2, '', None, None),
        132: (4, '', None, None),
        133: (4, '', None, None),
        134: (6, '', None, None),
        136: (4, 'chksum', None, None),
        137: (6, '', None, None),
        138: (1, '', None, 0.0),
        139: (1, 'ang1_corr', None, None),
        140: (1, 'ang2_corr', None, None),
        141: (6, '', None, None),
        142: (2, 'label_ptr', None, None),
        143: (2, '', None, None),
        144: (2, '', None, None),
        145: (2, 'ang1_corr_ptr', None, None),
        146: (6, 'ang1_corr_cnt', None, None),
        147: (2, 'ang2_corr_ptr', None, None),
        148: (6, 'ang2_corr_cnt', None, None),
        149: (6, 'fkey-digits', None, None),
        150: (1, 'ang1_add', None, 0.0),
        151: (1, 'ang1_add_cond', None, 0.0),
        152: (2, '', None, None),
        153: (5, 'lic', None, None),
        154: (1, 'comp1_out', None, None),
        155: (5, 'text1', None, None),
        156: (5, 'text2', None, None),
        157: (2, '', None, None),
        158: (4, '', None, None),
        159: (4, '', None, None),
        160: (4, 'comm-flags', None, None),
        161: (4, '', None, None),
        162: (4, '', None, None),
        163: (4, 'proc-flags', None, None),
        164: (4, '', None, None),
        165: (1, 'ang0_out', None, None),
        166: (1, 'ang1_out', None, None),
        167: (1, 'comp_avg', None, None),
        168: (2, 'comp2_xx', None, None),
        169: (2, '', None, None),
        170: (2, '', None, None),
        171: (2, 'edm_coef_ptr', None, None),
        172: (4, '', None, None),
        173: (2, '', None, None),
        174: (2, '', None, None),
        175: (1, 'servo_tgt_a1', None, 0.0),
        176: (1, 'servo_tgt_a2', None, 0.0),
        177: (2, 'servo1_coef_ptr', None, None),
        178: (2, 'servo2_coef_ptr', None, None),
        179: (5, '', None, None),
        180: (5, '', None, None),
        181: (5, '', None, None),
        182: (5, '', None, None),
        183: (1, 'ang_xxx', (-0.05, 0.05), 0.0),
        184: (6, '', None, None),
        185: (6, '', None, None),
        186: (6, '', None, None),
        187: (1, 'edm off', None, 0.0),
        209: (1, 'edm_off', None, 0.0),
        210: (1, 'ang0_add', None, 0.0),
        211: (1, 'servo_VA_offset', None, 0.0),
        212: (1, 'ang_xxx', None, 0.0),
        213: (5, '', None, None),
        214: (1, '', None, 0.0),
        215: (1, '', None, 0.0),
        216: (1, '', None, 0.0),
        246: (5, '', None, None),
        247: (5, '', None, None),
        248: (5, '', None, None),
        250: (6, 'devcom_trace', None, None),
        251: (7, 'comm', None, None),
        252: (1, 'comm', None, None),
        253: (6, 'comm', None, None),
        254: (4, 'comm', None, None),
    }

    angle_coef_1 = 22 * 4 # in 4byte format
    angle_coef_2 = 3 * 4

    def load_defaults(self):
        super().load_defaults()

        x1 = b'\x00' * 39
        x2 = b'\x00' * 170
        self.load_servo_coefs(x1,x2)

        self.load_edm_coefs(0)


    def load_servo_coefs(self, s1_bin, s2_bin):
        if len(s1_bin) != 39 or len(s2_bin) != 170:
            raise Exception("servo coef len:", len(angle0_bin), len(angle1_bin))

        addr0 = self.read_label(178)
        self.write_mem(addr0, 0x0000, s1_bin)

        addr1 = self.read_label(177)
        self.write_mem(addr1, 0x0000, s2_bin)

    def backup_servo_coefs(self):


        addr0 = self.read_label(178)
        s1 = self.read_mem(addr0, 0x0000, 39)
        addr1 = self.read_label(177)
        s2 = self.read_mem(addr1, 0x0000, 170)

        return s1, s2
